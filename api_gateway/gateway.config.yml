http:
  port: 8080
apiEndpoints:
  recommendation:
    host: 'localhost'
    paths: '/api/v1/recommendation*'
  event_tracking:
    host: 'localhost'
    paths: '/api/v1/event_tracking'
  backend:
    host: 'localhost'
    paths: '/api/v1/*'
serviceEndpoints:
  recommender:
    url: 'http://nginx:80'
  backend:
    url: 'http://backend:3000'
policies:
  - proxy
  - request-transformer
pipelines:
  recommendation:
    apiEndpoints:
      - recommendation
    policies:
      - proxy:
          - action:
              serviceEndpoint: recommender
      - request-transformer:
          - action:
              script: |
                const axios = require('axios');
                const tracks = context.response.data.recommendations;
                axios.post('http://backend:3000/api/v1/getTracks', { tracks })
                  .then(response => {
                    context.response.data = response.data;
                  })
                  .catch(err => {
                    context.response.statusCode = 500;
                    context.response.data = { error: err.message };
                  });
  event_tracking:
    apiEndpoints:
      - event_tracking
    policies:
      - proxy:
          - action:
              serviceEndpoint: recommender
  backend:
    apiEndpoints:
      - backend
    policies:
      - proxy:
          - action:
              serviceEndpoint: backend
              preserveHost: true